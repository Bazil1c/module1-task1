
#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура СообщитьSOS(Команда)
	
	Сообщить(СообщениеСигналаБедствия());
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервереБезКонтекста
Процедура УстановитьХарактеристикуЖизни(Жив)

	#Если Клиент Тогда
	Жив = ?(Жив, "НЕ_ЖИВ", "ЖИВ");
	#КонецЕсли
	
	Жив = ?(Жив =  Истина, "ЖИВ", "НЕ_ЖИВ");

КонецПроцедуры

&НаСервереБезКонтекста
Функция ДопИнфо(Галактика, Доминанта, Спектр)

	Возврат Новый Структура("Г, Д, Е", Галактика, Доминанта, Спектр);

КонецФункции

&НаСервере
Функция СообщениеСигналаБедствия()

	Жив = Истина;
	УстановитьХарактеристикуЖизни(Жив);

	Координаты = КоординатыГалактическойНавигации(Истина);

	Галактика = "все" + "све" + "есв";
	Доминанта = СтрШаблон(НСтр("ru = 'трансквартнирное %1'"), НСтр("sys = 'выравнивание'", "sys"));
	Спектр = "Бу" + "Га" + "Га";    
	
	ДопИнфо = ДопИнфо(Галактика, Доминанта, Спектр);    

	Пакет = Новый Структура("Жив, Координаты, ДопИнфо", Жив, Координаты, ДопИнфо);

	Пакет.Жив = Пакет.Жив + "_ПРОВЕРЕНО";
	
	Возврат КоннекторHTTP.ОбъектВJson(Пакет);  

КонецФункции		

&НаСервере
Функция КоординатыГалактическойНавигации(ФлажокУправления = Истина)
	
	Если ФлажокУправления Тогда 
		Ответ = КоннекторHTTP.Get("https://ya.ru");
	Иначе
		Ответ = КоннекторHTTP.Get("https://narod.ru");
	КонецЕсли;
   
    ОтветИсключение = КоннекторHTTP.КакИсключение(Ответ);
	ОтветТекст = КоннекторHTTP.КакТекст(Ответ);
	ОтветДвоичныеДанные = КоннекторHTTP.КакДвоичныеДанные(Ответ);
	
	Возврат XMLСтрока(Ответ.Заголовки["X-Yandex-Req-Id"]);
	
КонецФункции

#КонецОбласти
